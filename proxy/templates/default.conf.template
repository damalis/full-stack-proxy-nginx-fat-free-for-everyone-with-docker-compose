upstream docker_webserver {
	server	webserver:8080;
}

map $scheme $proxy_x_forwarded_ssl {
	default off;
	https on;
}

server {
	listen ${NGINX_PORT} default_server;
	listen [::]:${NGINX_PORT} ipv6only=on default_server;
	#
	server_name ${NGINX_HOST} www.${NGINX_HOST};
	#
	location ~ ^/.well-known/acme-challenge/ {
		root /tmp/acme-challenge;
	}
	#
	#location / {
		#port_in_redirect off;
		#return 301 https://$host$request_uri;
	#}
}

server {
	#listen 443 ssl http2;
	#listen [::]:443 ipv6only=on ssl http2;
	#
	server_name ${NGINX_HOST} www.${NGINX_HOST};
	#
	#ssl_certificate /etc/letsencrypt/live/${NGINX_HOST}/fullchain.pem;
	#ssl_certificate_key /etc/letsencrypt/live/${NGINX_HOST}/privkey.pem;
	#ssl_trusted_certificate /etc/letsencrypt/live/${NGINX_HOST}/chain.pem;
	#ssl_dhparam /etc/letsencrypt/ssl-dhparam.pem;
	include /etc/letsencrypt/options-ssl-nginx.conf;
	#     
    
	# pass requests for dynamic content to rails/turbogears/zope, et al
    location / {
	    proxy_pass	http://docker_webserver;
    }	 
	#
	
	# deny access to .htaccess vb. files, if Apache's document root
    #
    location ~/\. {
        deny all;     
        log_not_found off;
    }
	#
	# serve static files
    location ~ ^/(images|javascript|js|css|flash|media|static)/  {
        root	${WEBSERVER_DOC_ROOT};
        expires 30d;
    }
	#
	access_log off;
	error_log  /var/log/nginx/${NGINX_HOST}.error.log error;
}
